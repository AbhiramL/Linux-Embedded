Flashing image to BBB:

Method 1: Partition sd card yourself and load files into partitions

preparing micro SD card

dmesg    <--- shows system messages, find sd card (sdb or mmcblk0, assumed sdb)
lsblk    <--- shows devices, if partition of the sd card is mounted, use sudo umount to unmount
sudo dd if=/dev/zero of=/dev/sd_ bs=1M count=16   <--- wipes sd card, replace sd_ with sdc or sdb
sudo cfdisk /dev/sd_

-If cfdisk asks you to Select a label type, choose dos. This corresponds to traditional partitions tables that DOS/Windows would understand. gpt partition tables are needed for disks bigger than 2 TB.
-In the cfdisk interface, delete existing partitions, then create only one primary partition, starting from the
beginning, with the following properties:
• Size: 64MB big
• Type: W95 FAT32 (LBA) (c choice)
• Bootable flag enabled
Press Write when you are done.

-write FAT32 filesystem on new FAT32 partition

sudo mkfs.vfat -a -F 32 -n boot /dev/sdb1    <--- sdb1 is partition 

-mount and copy uboot files

sudo mkdir -p /mnt/sdcard
sudo mount /dev/sdb1 /mnt/sdcard
cd ~/u-boot/
sudo cp MLO u-boot.img /mnt/sdcard
sudo umount /mnt/sdcard

-place sd card on board, reset board, observe changes on serial port on boot up

-Note: create 2nd partition for rootfs(do cfdisk and later mkfs.ext4 on partition), and use busybox to create fs on the partition



Method 2: Using buildroot generated sdcard.img

1. do: sudo dd if=buildroot/output/images/sdcard.img of=/dev/[name of sdcard device, ex. sdc] bs=4M status=progress    
2. make sure sdcard isnt mounted on host
3. using 'cfdisk /dev/sd_' delete the 2nd partition, create a new linux partition(about 2gb), write changes to disk
    -make sure to do 'mkfs.ext4 /dev/sd_2' for the 2nd partition
4. copy rootfs.tar to the 2nd sdcard partition after mounting it, then run 'tar -xvf rootfs.tar'
    -it is safe to remove the rootfs.tar file from the partition now
5. copy sdcard.img to the 2nd partition (mount partition and cp file to there), then dismount the sdcard
6. boot into sdcard on BBB, sdcard.img should be in the root folder
7. run command on step 1 but the 'of' target is mmcblk1, skip adding the status flag
8. remove sdcard from BBB, reset board, stop uboot at the enviornment
9. do:
setenv bootcmd 'mmc dev 1; load mmc 1:1 ${loadaddr} zImage; load mmc 1:1 ${fdtaddr} am335x-boneblack.dtb; bootz ${loadaddr} - ${fdtaddr}'
setenv bootargs 'console=ttyO0,115200n8 root=/dev/mmcblk1p2 rw rootfstype=ext4 rootwait'
saveenv
10. reset board and boot into the kernel.

If the variables are not saving, it is because the uboot enviornment is not configured to save into a Fat files system or it is configured to save onto mmc 0 or the sdcard. Do the changes at the bottom of the uboot file on the github.



