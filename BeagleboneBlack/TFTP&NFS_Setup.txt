TFTP and NFS setup document for BBB:

Essential commands:
lsusb         - list usb devices, look for FTDI on a host for BBB connection
ip link       - list all active and inactive network interfaces on host
hostname -I   - list host's ip addr, use if you are connecting BBB to router via ether


------TFTP SETUP------

1. Use setenv command on BBB uboot interface to set the following:
	-ipaddr     to 192.168.0.2
	-serverip   to 192.168.0.1
	-ethprime   to usb_ether if using usb to power BBB, 
		    or eth0 for ethernet connection to router is given
	-usbnet_devaddr  to f8:dc:7a:00:00:02  (MAC addr on BBB side)
	-usbnet_hostaddr  to f8:dc:7a:00:00:01  (MAC addr on HOST side)
	
2. Saveenv on Uboot, running ping serverip on Uboot while running ifconfig on host side
	will show a new interface has been connected to the host.

3. On host pc, run 'nmcli con add type ethernet ifname enxf8dc7a000001 ip4 192.168.0.1/24'
	-this command will NOT override the dynamic dhcp given to the host by the router,
		instead, it will use this ip when communicating with the enx device(BBB)

4. Run sudo apt install tftpd-hpa on host pc, then nano /etc/default/tftpd-hpa
	-edit the directory to be a new tftp folder in the /home/user/ directory
	-should look like:
		# /etc/default/tftpd-hpa

		TFTP_USERNAME="tftp"
		TFTP_DIRECTORY="/home/kishore/tftpBBB"
		TFTP_ADDRESS="0.0.0.0:69"
		TFTP_OPTIONS="--secure"
	-run exportfs -a to save tftp setting changes

5. Run:
	-sudo systemctl restart
	-sudo systemctl status 
	-sudo chmod -R 755 tftp_folder
	-sudo chmod -R 644 tftp_folder/files_in_this_folder
		-add zimage and .dtb files here and do chmod on those files
	-After running chmod permission changes, you can test the changes by:
		-create text.txt in the tftp folder
		-run 'tftp 0x81000000 text.txt' on BBB uboot
		-run 'md 0x81000000' on BBB uboot to see memory contents


------NFS SETUP------

1. The following commands should be executed to set up nfs server:

	-sudo mkdir ~/nfsroot
	-sudo apt-get install nfs-kernel-server
	-sudo nano /etc/exports    <--edit file to add nfs root directory:
		/home/user/nfsroot 192.168.0.100(rw,sync,no_subtree_check,no_root_squash) 
		or alternatively: add a * instead of the ip, to make it accessible by all ips
	-sudo exportfs -a
	-sudo systemctl restart nfs-kernel-server

2. The following changes must be reflected in the buildroot .config file, 
	make this change by using 'nano .config' in the buildroot/output/build/linux-[version] directory:

	CONFIG_NFS_FS=y (NFS client support)
	CONFIG_ROOT_NFS=y (support for NFS as rootfs)
	CONFIG_IP_PNP=y (configure IP at boot time)    //optional, only if you want this

3. Run:
	-sudo chmod -R 755 nfs_folder
	-sudo chmod -R 644 nfs_folder/files_in_this_folder
		-the files in this folder can be generated by buildroot as a rootfs.tar
		-unzip the tar file here and change the permissions of the top level folders


---Setup the uboot environment for booting tftp/nfs---

1. The following are uboot commands to setup the environment on BBB for booting:

setenv bootfile zImage
setenv fdtfile am335x-boneblack.dtb
setenv loadaddr 0x82000000
setenv fdtaddr 0x88000000
setenv nfsrootpc ${serverip}:/home/user/nfsroot
setenv set_tftp_nfs_bootargs 'setenv bootargs console=${console} root=/dev/nfs ip=${ipaddr}:::::usb0 g_ether.dev_addr=${usbnet_devaddr} g_ether.host_addr=${usbnet_hostaddr} nfsroot=${nfsrootpc},nfsvers=3,tcp rw'
setenv set_tftp_nfs_loadimage 'tftp ${loadaddr} ${bootfile}'
setenv set_tftp_nfs_loadfdt 'tftp ${fdtaddr} ${fdtfile}'
setenv uenvcmd_tftp_nfs 'run set_tftp_nfs_bootargs; run set_tftp_nfs_loadimage; run set_tftp_nfs_loadfdt; printenv bootargs; bootz ${loadaddr} - ${fdtaddr}'

